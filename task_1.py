import pytest

"""Задача № 1"""

def all_unique_names(mentors):
    all_list = []
    for all_mentors in mentors:
        all_list.extend(all_mentors)
        all_names_list = []
        for mentor in all_list:
            name = mentor.split()
            all_names_list.append(name[0])
            unique_names = set(all_names_list)
            all_names_sorted = sorted(unique_names)
            all_names_sorted = ', '.join(all_names_sorted)
    return f'Уникальные имена преподавателей: {all_names_sorted}'



mentors = [
    ["Евгений Шмаргунов", "Олег Булыгин", "Дмитрий Демидов", "Кирилл Табельский", "Александр Ульянцев",
     "Александр Бардин", "Александр Иванов", "Антон Солонилин", "Максим Филипенко", "Елена Никитина", "Азамат Искаков",
     "Роман Гордиенко"],
    ["Филипп Воронов", "Анна Юшина", "Иван Бочаров", "Анатолий Корсаков", "Юрий Пеньков", "Илья Сухачев",
     "Иван Маркитан", "Ринат Бибиков", "Вадим Ерошевичев", "Тимур Сейсембаев", "Максим Батырев", "Никита Шумский",
     "Алексей Степанов", "Денис Коротков", "Антон Глушков", "Сергей Индюков", "Максим Воронцов", "Евгений Грязнов",
     "Константин Виролайнен", "Сергей Сердюк", "Павел Дерендяев"],
    ["Евгений Шмаргунов", "Олег Булыгин", "Александр Бардин", "Александр Иванов", "Кирилл Табельский",
     "Александр Ульянцев", "Роман Гордиенко", "Адилет Асканжоев", "Александр Шлейко", "Алена Батицкая", "Денис Ежков",
     "Владимир Чебукин", "Эдгар Нуруллин", "Евгений Шек", "Максим Филипенко", "Елена Никитина"],
    ["Владимир Чебукин", "Эдгар Нуруллин", "Евгений Шек", "Валерий Хаслер", "Татьяна Тен", "Александр Фитискин",
     "Александр Шлейко", "Алена Батицкая", "Александр Беспоясов", "Денис Ежков", "Николай Лопин", "Михаил Ларченко"]
]

expected_result = 'Уникальные имена преподавателей: Адилет, ' \
                  'Азамат, Александр, Алексей, Алена, Анатолий,' \
                  ' Анна, Антон, Вадим, Валерий, Владимир, Денис,' \
                  ' Дмитрий, Евгений, Елена, Иван, Илья, Кирилл,' \
                  ' Константин, Максим, Михаил, Никита, Николай,' \
                  ' Олег, Павел, Ринат, Роман, Сергей, Татьяна, Тимур, Филипп, Эдгар, Юрий'

result = all_unique_names(mentors)

assert result == expected_result


"""Задача № 2"""

expected_result = 'Александр: 10 раз(а), Евгений: 5 раз(а), Максим: 4 раз(а)'

@ pytest.mark.parametrize('expected_result', (expected_result))
def three_popular_names(mentors):
    all_list = []
    for all_mentors in mentors:
        all_list.extend(all_mentors)
    all_names_list = []
    for mentor in all_list:
        name = mentor.split()
        all_names_list.append(name[0])
    unique_names = set(all_names_list)
    unique_names = list(unique_names)
    popular = []
    for name in unique_names:
        popular.append([name, all_names_list.count(name)])
    popular.sort(key=lambda x: x[1], reverse=True)
    top_3 = popular[0:3]
    result = f'{top_3[0][0]}: {top_3[0][1]} раз(а), {top_3[1][0]}: {top_3[1][1]} раз(а), {top_3[2][0]}: {top_3[2][1]} раз(а)'
    assert result == expected_result


mentors = [
	["Евгений Шмаргунов", "Олег Булыгин", "Дмитрий Демидов", "Кирилл Табельский", "Александр Ульянцев", "Александр Бардин", "Александр Иванов", "Антон Солонилин", "Максим Филипенко", "Елена Никитина", "Азамат Искаков", "Роман Гордиенко"],
	["Филипп Воронов", "Анна Юшина", "Иван Бочаров", "Анатолий Корсаков", "Юрий Пеньков", "Илья Сухачев", "Иван Маркитан", "Ринат Бибиков", "Вадим Ерошевичев", "Тимур Сейсембаев", "Максим Батырев", "Никита Шумский", "Алексей Степанов", "Денис Коротков", "Антон Глушков", "Сергей Индюков", "Максим Воронцов", "Евгений Грязнов", "Константин Виролайнен", "Сергей Сердюк", "Павел Дерендяев"],
	["Евгений Шмаргунов", "Олег Булыгин", "Александр Бардин", "Александр Иванов", "Кирилл Табельский", "Александр Ульянцев", "Роман Гордиенко", "Адилет Асканжоев", "Александр Шлейко", "Алена Батицкая", "Денис Ежков", "Владимир Чебукин", "Эдгар Нуруллин", "Евгений Шек", "Максим Филипенко", "Елена Никитина"],
	["Владимир Чебукин", "Эдгар Нуруллин", "Евгений Шек", "Валерий Хаслер", "Татьяна Тен", "Александр Фитискин", "Александр Шлейко", "Алена Батицкая", "Александр Беспоясов", "Денис Ежков", "Николай Лопин", "Михаил Ларченко"]
]


"""Задача № 3"""

def super_names(course, mentors):
    mentors_names = []
    result = []
    for m in mentors:
        course_names = []
        for name in m:
            course_names.append(name.split()[0])
        mentors_names.append(course_names)
    pairs = []
    for id1 in range(len(mentors_names)):
        for id2 in range(len(mentors_names)):
            if id1 == id2:
                continue
            intersection_set = set(mentors_names[id1]) & set(mentors_names[id2])
            if len(intersection_set) > 0:
                pair = {courses[id1], courses[id2]}
                if pair not in pairs:
                    pairs.append(pair)
                    all_names_sorted = sorted(intersection_set)
                    yield f"На курсах '{courses[id1]}' и '{courses[id2]}' преподают:", ', '.join(all_names_sorted)


courses = ["Python-разработчик с нуля", "Java-разработчик с нуля", "Fullstack-разработчик на Python", "Frontend-разработчик с нуля"]

mentors = [
	["Евгений Шмаргунов", "Олег Булыгин", "Дмитрий Демидов", "Кирилл Табельский", "Александр Ульянцев", "Александр Бардин", "Александр Иванов", "Антон Солонилин", "Максим Филипенко", "Елена Никитина", "Азамат Искаков", "Роман Гордиенко"],
	["Филипп Воронов", "Анна Юшина", "Иван Бочаров", "Анатолий Корсаков", "Юрий Пеньков", "Илья Сухачев", "Иван Маркитан", "Ринат Бибиков", "Вадим Ерошевичев", "Тимур Сейсембаев", "Максим Батырев", "Никита Шумский", "Алексей Степанов", "Денис Коротков", "Антон Глушков", "Сергей Индюков", "Максим Воронцов", "Евгений Грязнов", "Константин Виролайнен", "Сергей Сердюк", "Павел Дерендяев"],
	["Евгений Шмаргунов", "Олег Булыгин", "Александр Бардин", "Александр Иванов", "Кирилл Табельский", "Александр Ульянцев", "Роман Гордиенко", "Адилет Асканжоев", "Александр Шлейко", "Алена Батицкая", "Денис Ежков", "Владимир Чебукин", "Эдгар Нуруллин", "Евгений Шек", "Максим Филипенко", "Елена Никитина"],
	["Владимир Чебукин", "Эдгар Нуруллин", "Евгений Шек", "Валерий Хаслер", "Татьяна Тен", "Александр Фитискин", "Александр Шлейко", "Алена Батицкая", "Александр Беспоясов", "Денис Ежков", "Николай Лопин", "Михаил Ларченко"]
]

result = super_names(courses, mentors)
expected_result = [("На курсах 'Python-разработчик с нуля' и 'Java-разработчик с нуля' преподают:", 'Антон, Евгений, Максим'),
                   ("На курсах 'Python-разработчик с нуля' и 'Fullstack-разработчик на Python' преподают:", 'Александр, Евгений, Елена, Кирилл, Максим, Олег, Роман'),
                   ("На курсах 'Python-разработчик с нуля' и 'Frontend-разработчик с нуля' преподают:", 'Александр, Евгений'),
                   ("На курсах 'Java-разработчик с нуля' и 'Fullstack-разработчик на Python' преподают:", 'Денис, Евгений, Максим'),
                   ("На курсах 'Java-разработчик с нуля' и 'Frontend-разработчик с нуля' преподают:", 'Денис, Евгений'),
                   ("На курсах 'Fullstack-разработчик на Python' и 'Frontend-разработчик с нуля' преподают:", 'Александр, Алена, Владимир, Денис, Евгений, Эдгар')]

for resilt_item, expected_result_item in zip(result, expected_result):
    assert resilt_item == expected_result_item



